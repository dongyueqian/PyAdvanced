from multiprocessing import Pool
import os,time,random

def main(msg):
    t_start = time.time()
    print("进程 %s 开始执行，进程号为:%d" % (msg,os.getpid()))
    # random.random()随机生成0～1直之间的浮点数
    time.sleep(random.random()*2)
    t_stop = time.time()
    print(msg, "执行完毕，耗时%0.2f秒" % (t_stop - t_start))
    print('')

if __name__ == '__main__':

    p = Pool(3) # 定义一个进程池，最大进程数为3
    print("主进程号为:%d" % os.getppid())
    for i in range(1,11):
        # Pool().apply_async(要调用的目标，（传递给目标的参数元组,）)
        # 每次循环将会用空闲出来的子进程去调用目标
        p.apply_async(main,(i,))
    print("--------start--------")
    p.close() # 关闭进程池，关闭后p不在接收新的请求
    p.join() # 等待p中所有子进程执行完成，必须放在close语句之后
    print("--------end--------")
'''
运行结果：
--------start--------
进程 1 开始执行，进程号为:20743
进程 2 开始执行，进程号为:20744
进程 3 开始执行，进程号为:20745
3 执行完毕，耗时0.03秒

进程 4 开始执行，进程号为:20745
1 执行完毕，耗时0.34秒

进程 5 开始执行，进程号为:20743
4 执行完毕，耗时0.83秒

进程 6 开始执行，进程号为:20745
2 执行完毕，耗时0.95秒

进程 7 开始执行，进程号为:20744
5 执行完毕，耗时0.91秒

进程 8 开始执行，进程号为:20743
8 执行完毕，耗时0.28秒

进程 9 开始执行，进程号为:20743
6 执行完毕，耗时0.84秒

进程 10 开始执行，进程号为:20745
10 执行完毕，耗时0.48秒

7 执行完毕，耗时1.87秒

9 执行完毕，耗时1.77秒

--------end--------
'''